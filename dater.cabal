Name:          dater
Version:       0.1.3
License:       MIT
License-file:  LICENSE
Category:      Writing
Synopsis:      Express and operate on dates & times in varied formats
Description:   Lets you declare your own date & time formats
Author:        Nate Soares
Maintainer:    nate@natesoares.com
Build-Type:    Simple
Cabal-Version: >=1.9.2

Test-Suite test-dater
  type: exitcode-stdio-1.0
  main-is: Main.hs
  Ghc-Options: -O2 -Wall
  build-depends:
    Cabal >= 1.9.2,
    QuickCheck >= 2.4,
    test-framework >= 0.6,
    test-framework-quickcheck2 >= 0.2,
    parsec >= 3.1 && < 4,
    containers >= 0.4,
    template-haskell >= 2 && < 3,
    random >= 1.0,
    base >= 4 && < 5
  Hs-Source-Dirs: src, systems, formats, test

Library
  Build-Depends:
    parsec >= 3.1 && < 4,
    containers >= 0.4,
    template-haskell >= 2 && < 3,
    QuickCheck >= 2.4,
    random >= 1.0,
    base >= 4 && < 5
  Ghc-Options: -O2 -Wall
  Hs-Source-Dirs: src, systems, formats
  Exposed-Modules:
    Data.Calendar,
    Data.Calendar.Composers,
    Data.Calendar.Utils,
    Data.Calendar.Gregorian,
    Data.Calendar.Gregorian.Date,
    Data.Calendar.Gregorian.Time,
    Data.Calendar.Gregorian.Places,
    Data.Calendar.Gregorian.TimeZones,
    Data.Calendar.Kaol,
    Data.Locale
    Data.Modable,
    Data.Naturals,
    Data.Normalize,
    Data.Pair,
    Data.BoundedIn,
    Text.Format,
    Text.Format.Table,
    Text.Format.Read,
    Text.Format.Write,
    Text.Format.Parse,
    Text.Format.Calendar.Standard,
    Text.Parse
